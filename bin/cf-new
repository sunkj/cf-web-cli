#!/usr/bin/env node

var program = require('commander')
var path = require('path');
var co = require('co');
var logger = require('../lib/logger');
var downloadAction = require('../lib/download-action');
var generateAction = require('../lib/generate-action');
var installAction = require('../lib/install-action');

/**
 * Usage.
 */
program
  .usage('<template-name> [project-name]')

/**
 * Help.
 */
program.on('--help', function () {
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # create a new project straight from a github template'))
  console.log('    $ cf new ng2   project-name')
  console.log('    $ cf new vue   project-name')
  console.log('    $ cf new react project-name')
  console.log()
})


program.parse(process.argv)

/**
 * 如果没有提供任何参数，显示帮助信息
 */
if (program.args.length < 2) {
  return program.help();
}

/** 执行参数定义 */
let params = {
  template: program.args[0],
  projectName: program.args[1],
  tempPath: path.join(process.cwd(), '.' + program.args[0])
};


/**
 * 开始执行
 */
run();

/**
 * @description 开始执行
 */
function run () {
  co(function*(){
    logger.log(`开始，项目名称：${params.projectName}`);
    // 下载
    let downloadPath = yield downloadAction.exec(params.template, params.tempPath);
    // 生成
    let projectPath = generateAction.exec(params.projectName, downloadPath);
    if(!projectPath){
     logger.error('生成项目失败');
     return false;  
    }
    // 运行 npm install
    let installResult = yield installAction.exec(projectPath);  
    if(installResult){
      logger.success(`结束，项目名称：${params.projectName}`);
      return true;
    }else{
      logger.success(`结束，项目名称：${params.projectName}，请手动尝试运行 npm install`);
      return false;
    }    
  }).catch(
    e => {console.log(e);
      logger.error('安装失败！！！');
    }
  )
}


/**
 * 监听退出
 */
console.log()
process.on('exit', function () {
  console.log()
})
