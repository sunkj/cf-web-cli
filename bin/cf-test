#!/usr/bin/env node

var program = require('commander')
var path = require('path');
var co = require('co');
var chalk = require('chalk');
var ora = require('ora');
var logger = require('../lib/logger');
const spawn = require('child_process').spawn;

/**
 * Usage.
 */
program
  .usage('')
  .description(chalk.gray('运行单元测试'))

/**
 * Help.
 */
program.on('--help', function () {
  console.log('  Examples:')
  console.log()
  console.log('    $ cf test')
  console.log()
})


program.parse(process.argv)

/**
 * 开始执行
 */
run();

/**
 * @description 开始执行
 */
function run () {
  // 开始
  logger.log('开始启动单元测试');
  var commandArgs = ['run','test'];
  var cwd = process.cwd();
  // 开始运行命令
  var spinner = ora(logger.log('开始运行命令...'));
  spinner.start();
  const ls = spawn((process.platform === "win32" ||  process.platform === "win64") ? "npm.cmd" : "npm", commandArgs, {"cwd": cwd});
  ls.stdout.on('data', (data) => {
    console.log(`${data}`);
  });
  ls.stderr.on('data', (data) => {
    console.log(`${data}`);
  });
  ls.on('error', (err) => {
    spinner.stop();
    console.log('启动子进程失败,', err);
  });
  ls.on('close', (code) => {
      spinner.stop();
  });
}


/**
 * 监听退出
 */
process.on('exit', function () {
  console.log()
})
